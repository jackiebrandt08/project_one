{"filter":false,"title":"www","tooltip":"/importing/bin/www","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":27,"column":17},"end":{"row":27,"column":18},"action":"remove","lines":["t"],"id":31}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"remove","lines":["r"],"id":32}],[{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"remove","lines":["o"],"id":33}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"remove","lines":["p"],"id":34}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"insert","lines":["p"],"id":35}],[{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"insert","lines":["o"],"id":36}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":16},"action":"remove","lines":["po"],"id":37},{"start":{"row":27,"column":14},"end":{"row":27,"column":18},"action":"insert","lines":["port"]}],[{"start":{"row":79,"column":0},"end":{"row":81,"column":3},"action":"remove","lines":["/**"," * Event listener for HTTP server \"listening\" event."," */"],"id":38}],[{"start":{"row":78,"column":0},"end":{"row":79,"column":0},"action":"remove","lines":["",""],"id":39}],[{"start":{"row":77,"column":1},"end":{"row":78,"column":0},"action":"remove","lines":["",""],"id":40}],[{"start":{"row":64,"column":0},"end":{"row":64,"column":57},"action":"remove","lines":["  // handle specific listen errors with friendly messages"],"id":41}],[{"start":{"row":51,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["/**"," * Event listener for HTTP server \"error\" event."," */",""],"id":42}],[{"start":{"row":31,"column":1},"end":{"row":33,"column":3},"action":"remove","lines":["**"," * Normalize a port into a number, string, or false."," */"],"id":43}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"remove","lines":["/"],"id":44}],[{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"remove","lines":["",""],"id":45}],[{"start":{"row":23,"column":0},"end":{"row":25,"column":3},"action":"remove","lines":["/**"," * Listen on provided port, on all network interfaces."," */"],"id":46}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":47}],[{"start":{"row":17,"column":0},"end":{"row":19,"column":3},"action":"remove","lines":["/**"," * Create HTTP server."," */"],"id":48}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":49}],[{"start":{"row":10,"column":0},"end":{"row":12,"column":3},"action":"remove","lines":["/**"," * Get port from environment and store in Express."," */"],"id":50}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["",""],"id":51}],[{"start":{"row":0,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["#!/usr/bin/env node","","/**"," * Module dependencies."," */",""],"id":52}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":53}],[{"start":{"row":0,"column":0},"end":{"row":65,"column":0},"action":"remove","lines":["var app = require('../app');","var debug = require('debug')('importing:server');","var http = require('http');","","","var port = normalizePort(process.env.PORT || '3000');","app.set('port', port);","","","var server = http.createServer(app);","","","server.listen(port);","server.on('error', onError);","server.on('listening', onListening);","","","function normalizePort(val) {","  var port = parseInt(val, 10);","","  if (isNaN(port)) {","    // named pipe","    return val;","  }","","  if (port >= 0) {","    // port number","    return port;","  }","","  return false;","}","","","function onError(error) {","  if (error.syscall !== 'listen') {","    throw error;","  }","","  var bind = typeof port === 'string'","    ? 'Pipe ' + port","    : 'Port ' + port;","","","  switch (error.code) {","    case 'EACCES':","      console.error(bind + ' requires elevated privileges');","      process.exit(1);","      break;","    case 'EADDRINUSE':","      console.error(bind + ' is already in use');","      process.exit(1);","      break;","    default:","      throw error;","  }","}","","function onListening() {","  var addr = server.address();","  var bind = typeof addr === 'string'","    ? 'pipe ' + addr","    : 'port ' + addr.port;","  debug('Listening on ' + bind);","}",""],"id":54}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":1},"action":"insert","lines":["var app = require('../app');","var debug = require('debug')('auth-exercise:server');","var http = require('http');","","/**"," * Get port from environment and store in Express."," */","","var port = normalizePort(process.env.PORT || '3000');","app.set('port', port);","","/**"," * Create HTTP server."," */","","var server = http.createServer(app);","","/**"," * Listen on provided port, on all network interfaces."," */","","server.listen(port);","server.on('error', onError);","server.on('listening', onListening);","","/**"," * Normalize a port into a number, string, or false."," */","","function normalizePort(val) {","  var port = parseInt(val, 10);","","  if (isNaN(port)) {","    // named pipe","    return val;","  }","","  if (port >= 0) {","    // port number","    return port;","  }","","  return false;","}","","/**"," * Event listener for HTTP server \"error\" event."," */","","function onError(error) {","  if (error.syscall !== 'listen') {","    throw error;","  }","","  var bind = typeof port === 'string'","    ? 'Pipe ' + port","    : 'Port ' + port;","","  // handle specific listen errors with friendly messages","  switch (error.code) {","    case 'EACCES':","      console.error(bind + ' requires elevated privileges');","      process.exit(1);","      break;","    case 'EADDRINUSE':","      console.error(bind + ' is already in use');","      process.exit(1);","      break;","    default:","      throw error;","  }","}","","/**"," * Event listener for HTTP server \"listening\" event."," */","","function onListening() {","  var addr = server.address();","  var bind = typeof addr === 'string'","    ? 'pipe ' + addr","    : 'port ' + addr.port;","  debug('Listening on ' + bind);","}"],"id":55}],[{"start":{"row":4,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["/**"," * Get port from environment and store in Express."," */",""],"id":56}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":57}],[{"start":{"row":1,"column":42},"end":{"row":1,"column":43},"action":"remove","lines":["e"],"id":58}],[{"start":{"row":1,"column":41},"end":{"row":1,"column":42},"action":"remove","lines":["s"],"id":59}],[{"start":{"row":1,"column":40},"end":{"row":1,"column":41},"action":"remove","lines":["i"],"id":60}],[{"start":{"row":1,"column":39},"end":{"row":1,"column":40},"action":"remove","lines":["c"],"id":61}],[{"start":{"row":1,"column":38},"end":{"row":1,"column":39},"action":"remove","lines":["r"],"id":62}],[{"start":{"row":1,"column":37},"end":{"row":1,"column":38},"action":"remove","lines":["e"],"id":63}],[{"start":{"row":1,"column":36},"end":{"row":1,"column":37},"action":"remove","lines":["x"],"id":64}],[{"start":{"row":1,"column":35},"end":{"row":1,"column":36},"action":"remove","lines":["e"],"id":65}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":35},"action":"remove","lines":["-"],"id":66}],[{"start":{"row":1,"column":33},"end":{"row":1,"column":34},"action":"remove","lines":["h"],"id":67}],[{"start":{"row":1,"column":32},"end":{"row":1,"column":33},"action":"remove","lines":["t"],"id":68}],[{"start":{"row":1,"column":31},"end":{"row":1,"column":32},"action":"remove","lines":["u"],"id":69}],[{"start":{"row":1,"column":31},"end":{"row":1,"column":32},"action":"insert","lines":["s"],"id":70}],[{"start":{"row":1,"column":32},"end":{"row":1,"column":33},"action":"insert","lines":["s"],"id":71}],[{"start":{"row":1,"column":33},"end":{"row":1,"column":34},"action":"insert","lines":["i"],"id":72}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":35},"action":"insert","lines":["g"],"id":73}],[{"start":{"row":1,"column":35},"end":{"row":1,"column":36},"action":"insert","lines":["n"],"id":74}],[{"start":{"row":1,"column":36},"end":{"row":1,"column":37},"action":"insert","lines":["m"],"id":75}],[{"start":{"row":1,"column":37},"end":{"row":1,"column":38},"action":"insert","lines":["e"],"id":76}],[{"start":{"row":1,"column":38},"end":{"row":1,"column":39},"action":"insert","lines":["n"],"id":77}],[{"start":{"row":1,"column":39},"end":{"row":1,"column":40},"action":"insert","lines":["t"],"id":78}],[{"start":{"row":1,"column":40},"end":{"row":1,"column":42},"action":"insert","lines":["  "],"id":79}],[{"start":{"row":1,"column":40},"end":{"row":1,"column":42},"action":"remove","lines":["  "],"id":80}],[{"start":{"row":1,"column":40},"end":{"row":1,"column":41},"action":"insert","lines":["-"],"id":81}],[{"start":{"row":1,"column":41},"end":{"row":1,"column":42},"action":"insert","lines":["1"],"id":82}],[{"start":{"row":7,"column":0},"end":{"row":9,"column":3},"action":"remove","lines":["/**"," * Create HTTP server."," */"],"id":83}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["",""],"id":84}],[{"start":{"row":5,"column":22},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":85}],[{"start":{"row":8,"column":0},"end":{"row":11,"column":3},"action":"remove","lines":["","/**"," * Listen on provided port, on all network interfaces."," */"],"id":86}],[{"start":{"row":7,"column":36},"end":{"row":8,"column":0},"action":"remove","lines":["",""],"id":87}],[{"start":{"row":13,"column":0},"end":{"row":16,"column":0},"action":"remove","lines":["/**"," * Normalize a port into a number, string, or false."," */",""],"id":88}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["",""],"id":89}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":17},"action":"remove","lines":["    // named pipe"],"id":90}],[{"start":{"row":16,"column":20},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":91}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":18},"action":"remove","lines":["    // port number"],"id":92}],[{"start":{"row":20,"column":18},"end":{"row":21,"column":0},"action":"remove","lines":["",""],"id":93}],[{"start":{"row":27,"column":0},"end":{"row":30,"column":0},"action":"remove","lines":["/**"," * Event listener for HTTP server \"error\" event."," */",""],"id":94}],[{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["",""],"id":95}],[{"start":{"row":51,"column":0},"end":{"row":53,"column":3},"action":"remove","lines":["/**"," * Event listener for HTTP server \"listening\" event."," */"],"id":96}],[{"start":{"row":50,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["",""],"id":97}],[{"start":{"row":36,"column":0},"end":{"row":36,"column":57},"action":"remove","lines":["  // handle specific listen errors with friendly messages"],"id":98}],[{"start":{"row":35,"column":0},"end":{"row":36,"column":0},"action":"remove","lines":["",""],"id":99}],[{"start":{"row":1,"column":41},"end":{"row":1,"column":42},"action":"remove","lines":["1"],"id":100}],[{"start":{"row":1,"column":40},"end":{"row":1,"column":41},"action":"remove","lines":["-"],"id":101}],[{"start":{"row":1,"column":39},"end":{"row":1,"column":40},"action":"remove","lines":["t"],"id":102}],[{"start":{"row":1,"column":38},"end":{"row":1,"column":39},"action":"remove","lines":["n"],"id":103}],[{"start":{"row":1,"column":37},"end":{"row":1,"column":38},"action":"remove","lines":["e"],"id":104}],[{"start":{"row":1,"column":36},"end":{"row":1,"column":37},"action":"remove","lines":["m"],"id":105}],[{"start":{"row":1,"column":35},"end":{"row":1,"column":36},"action":"remove","lines":["n"],"id":106}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":35},"action":"remove","lines":["g"],"id":107}],[{"start":{"row":1,"column":33},"end":{"row":1,"column":34},"action":"remove","lines":["i"],"id":108}],[{"start":{"row":1,"column":32},"end":{"row":1,"column":33},"action":"remove","lines":["s"],"id":109}],[{"start":{"row":1,"column":31},"end":{"row":1,"column":32},"action":"remove","lines":["s"],"id":110}],[{"start":{"row":1,"column":30},"end":{"row":1,"column":31},"action":"remove","lines":["a"],"id":111}],[{"start":{"row":1,"column":30},"end":{"row":1,"column":31},"action":"insert","lines":["i"],"id":112}],[{"start":{"row":1,"column":31},"end":{"row":1,"column":32},"action":"insert","lines":["m"],"id":113}],[{"start":{"row":1,"column":32},"end":{"row":1,"column":33},"action":"insert","lines":["p"],"id":114}],[{"start":{"row":1,"column":33},"end":{"row":1,"column":34},"action":"insert","lines":["o"],"id":115}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":35},"action":"insert","lines":["r"],"id":116}],[{"start":{"row":1,"column":35},"end":{"row":1,"column":36},"action":"insert","lines":["t"],"id":117}],[{"start":{"row":1,"column":30},"end":{"row":1,"column":36},"action":"remove","lines":["import"],"id":118},{"start":{"row":1,"column":30},"end":{"row":1,"column":39},"action":"insert","lines":["importing"]}],[{"start":{"row":0,"column":0},"end":{"row":57,"column":1},"action":"remove","lines":["var app = require('../app');","var debug = require('debug')('importing:server');","var http = require('http');","","var port = normalizePort(process.env.PORT || '3000');","app.set('port', port);","","var server = http.createServer(app);","","server.listen(port);","server.on('error', onError);","server.on('listening', onListening);","","function normalizePort(val) {","  var port = parseInt(val, 10);","","  if (isNaN(port)) {","    return val;","  }","","  if (port >= 0) {","    return port;","  }","","  return false;","}","","function onError(error) {","  if (error.syscall !== 'listen') {","    throw error;","  }","","  var bind = typeof port === 'string'","    ? 'Pipe ' + port","    : 'Port ' + port;","","  switch (error.code) {","    case 'EACCES':","      console.error(bind + ' requires elevated privileges');","      process.exit(1);","      break;","    case 'EADDRINUSE':","      console.error(bind + ' is already in use');","      process.exit(1);","      break;","    default:","      throw error;","  }","}","","","function onListening() {","  var addr = server.address();","  var bind = typeof addr === 'string'","    ? 'pipe ' + addr","    : 'port ' + addr.port;","  debug('Listening on ' + bind);","}"],"id":119},{"start":{"row":0,"column":0},"end":{"row":90,"column":0},"action":"insert","lines":["#!/usr/bin/env node","","/**"," * Module dependencies."," */","","var app = require('../app');","var debug = require('debug')('assignment-1-sp2016:server');","var http = require('http');","","/**"," * Get port from environment and store in Express."," */","","var port = normalizePort(process.env.PORT || '3000');","app.set('port', port);","","/**"," * Create HTTP server."," */","","var server = http.createServer(app);","","/**"," * Listen on provided port, on all network interfaces."," */","","server.listen(port);","server.on('error', onError);","server.on('listening', onListening);","","/**"," * Normalize a port into a number, string, or false."," */","","function normalizePort(val) {","  var port = parseInt(val, 10);","","  if (isNaN(port)) {","    // named pipe","    return val;","  }","","  if (port >= 0) {","    // port number","    return port;","  }","","  return false;","}","","/**"," * Event listener for HTTP server \"error\" event."," */","","function onError(error) {","  if (error.syscall !== 'listen') {","    throw error;","  }","","  var bind = typeof port === 'string'","    ? 'Pipe ' + port","    : 'Port ' + port;","","  // handle specific listen errors with friendly messages","  switch (error.code) {","    case 'EACCES':","      console.error(bind + ' requires elevated privileges');","      process.exit(1);","      break;","    case 'EADDRINUSE':","      console.error(bind + ' is already in use');","      process.exit(1);","      break;","    default:","      throw error;","  }","}","","/**"," * Event listener for HTTP server \"listening\" event."," */","","function onListening() {","  var addr = server.address();","  var bind = typeof addr === 'string'","    ? 'pipe ' + addr","    : 'port ' + addr.port;","  debug('Listening on ' + bind);","}",""]}],[{"start":{"row":78,"column":0},"end":{"row":82,"column":0},"action":"remove","lines":["","/**"," * Event listener for HTTP server \"listening\" event."," */",""],"id":120}],[{"start":{"row":51,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["/**"," * Event listener for HTTP server \"error\" event."," */",""],"id":121}],[{"start":{"row":50,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["",""],"id":122}],[{"start":{"row":23,"column":0},"end":{"row":25,"column":3},"action":"remove","lines":["/**"," * Listen on provided port, on all network interfaces."," */"],"id":123}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":124}],[{"start":{"row":17,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["/**"," * Create HTTP server."," */",""],"id":125}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":126}],[{"start":{"row":10,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["/**"," * Get port from environment and store in Express."," */",""],"id":127}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["",""],"id":128}],[{"start":{"row":0,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["#!/usr/bin/env node","","/**"," * Module dependencies."," */",""],"id":129}],[{"start":{"row":14,"column":0},"end":{"row":17,"column":3},"action":"remove","lines":["","/**"," * Normalize a port into a number, string, or false."," */"],"id":130}],[{"start":{"row":41,"column":0},"end":{"row":41,"column":57},"action":"remove","lines":["  // handle specific listen errors with friendly messages"],"id":131}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":49,"column":22},"end":{"row":49,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1462391271920,"hash":"3db16c34130d3a2230cab8721073980b10678030"}