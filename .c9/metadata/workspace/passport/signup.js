{"filter":false,"title":"signup.js","tooltip":"/passport/signup.js","undoManager":{"mark":18,"position":18,"stack":[[{"start":{"row":0,"column":0},"end":{"row":58,"column":1},"action":"insert","lines":["var LocalStrategy   = require('passport-local').Strategy;","var User = require('../models/User');","var bCrypt = require('bcrypt-nodejs');","","module.exports = function(passport){","","\tpassport.use('signup', new LocalStrategy({","            passReqToCallback : true // allows us to pass back the entire request to the callback","        },","        function(req, username, password, done) {","","           var findOrCreateUser = function(){","                // find a user in Mongo with provided username","                User.findOne({ 'username' :  username }, function(err, user) {","                    // In case of any error, return using the done method","                    if (err){","                        console.log('Error in SignUp: '+err);","                        return done(err);","                    }","                    // already exists","                    if (user) {","                        console.log('User already exists with username: '+username);","                        return done(null, false, req.flash('message','User Already Exists'));","                    } else {","                        // if there is no user with that email","                        // create the user","                        var newUser = new User();","","                        // set the user's local credentials","                        newUser.username = username;","                        newUser.password = createHash(password);","                        newUser.email = req.param('email');","                        newUser.firstName = req.param('firstName');","                        newUser.lastName = req.param('lastName');","","                        // save the user","                        newUser.save(function(err) {","                            if (err){","                                console.log('Error in Saving user: '+err);  ","                                throw err;  ","                            }","                            console.log('User Registration succesful');    ","                            return done(null, newUser);","                        });","                    }","                });","            };","            // Delay the execution of findOrCreateUser and execute the method","            // in the next tick of the event loop","            process.nextTick(findOrCreateUser);","        })","    );","","    // Generates hash using bCrypt","    var createHash = function(password){","        return bCrypt.hashSync(password, bCrypt.genSaltSync(10), null);","    }","","}"],"id":1}],[{"start":{"row":56,"column":5},"end":{"row":56,"column":6},"action":"insert","lines":["}"],"id":2}],[{"start":{"row":58,"column":0},"end":{"row":58,"column":1},"action":"remove","lines":["}"],"id":3}],[{"start":{"row":57,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":["",""],"id":4}],[{"start":{"row":56,"column":6},"end":{"row":57,"column":0},"action":"remove","lines":["",""],"id":5}],[{"start":{"row":56,"column":6},"end":{"row":56,"column":7},"action":"insert","lines":[";"],"id":6}],[{"start":{"row":53,"column":1},"end":{"row":53,"column":34},"action":"remove","lines":["   // Generates hash using bCrypt"],"id":7}],[{"start":{"row":53,"column":0},"end":{"row":53,"column":1},"action":"remove","lines":[" "],"id":8}],[{"start":{"row":52,"column":0},"end":{"row":53,"column":0},"action":"remove","lines":["",""],"id":9}],[{"start":{"row":47,"column":1},"end":{"row":48,"column":49},"action":"remove","lines":["           // Delay the execution of findOrCreateUser and execute the method","            // in the next tick of the event loop"],"id":10}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":40},"action":"remove","lines":["                        // save the user"],"id":11}],[{"start":{"row":34,"column":0},"end":{"row":35,"column":0},"action":"remove","lines":["",""],"id":12}],[{"start":{"row":24,"column":0},"end":{"row":25,"column":42},"action":"remove","lines":["                        // if there is no user with that email","                        // create the user"],"id":13}],[{"start":{"row":14,"column":1},"end":{"row":14,"column":73},"action":"remove","lines":["                   // In case of any error, return using the done method"],"id":14}],[{"start":{"row":12,"column":1},"end":{"row":12,"column":62},"action":"remove","lines":["               // find a user in Mongo with provided username"],"id":15}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"remove","lines":[" "],"id":16}],[{"start":{"row":11,"column":45},"end":{"row":12,"column":0},"action":"remove","lines":["",""],"id":17}],[{"start":{"row":7,"column":38},"end":{"row":7,"column":97},"action":"remove","lines":["/ allows us to pass back the entire request to the callback"],"id":18}],[{"start":{"row":7,"column":37},"end":{"row":7,"column":38},"action":"remove","lines":["/"],"id":19}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":14,"column":29},"end":{"row":14,"column":29},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1461975573732,"hash":"dd4fd16b965eb7ca775a7dfe1263e9117e7248a9"}