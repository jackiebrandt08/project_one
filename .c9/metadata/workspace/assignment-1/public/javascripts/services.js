{"filter":false,"title":"services.js","tooltip":"/assignment-1/public/javascripts/services.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":104,"column":4},"action":"insert","lines":["angular.module('myApp').factory('AuthService',","  ['$q', '$timeout', '$http',","  function ($q, $timeout, $http) {","","    // create user variable","    var user = null;","","    // return available functions for use in controllers","    return ({","      isLoggedIn: isLoggedIn,","      getUserStatus: getUserStatus,","      login: login,","      logout: logout,","      register: register","    });","","    function isLoggedIn() {","        if(user) {","          return true;","        } else {","          return false;","        }","    }","","    function getUserStatus() {","      return user;","    }","","    function login(username, password) {","","      // create a new instance of deferred","      var deferred = $q.defer();","","      // send a post request to the server","      $http.post('/user/login', {username: username, password: password})","        // handle success","        .success(function (data, status) {","          if(status === 200 && data.status){","            user = true;","            deferred.resolve();","          } else {","            user = false;","            deferred.reject();","          }","        })","        // handle error","        .error(function (data) {","          user = false;","          deferred.reject();","        });","","      // return promise object","      return deferred.promise;","","    }","","    function logout() {","","      // create a new instance of deferred","      var deferred = $q.defer();","","      // send a get request to the server","      $http.get('/user/logout')","        // handle success","        .success(function (data) {","          user = false;","          deferred.resolve();","        })","        // handle error","        .error(function (data) {","          user = false;","          deferred.reject();","        });","","      // return promise object","      return deferred.promise;","","    }","","    function register(username, password) {","","      // create a new instance of deferred","      var deferred = $q.defer();","","      // send a post request to the server","      $http.post('/user/register', {username: username, password: password})","        // handle success","        .success(function (data, status) {","          if(status === 200 && data.status){","            deferred.resolve();","          } else {","            deferred.reject();","          }","        })","        // handle error","        .error(function (data) {","          deferred.reject();","        });","","      // return promise object","      return deferred.promise;","","    }","","}]);"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":15,"column":0},"end":{"row":15,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1461969170000,"hash":"5912c7da8399d7a84a442a3aaab30f5d41aea15f"}